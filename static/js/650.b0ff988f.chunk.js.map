{"version":3,"file":"static/js/650.b0ff988f.chunk.js","mappings":"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","sources":["components/MovieAPI/FetchMovie.js","components/MovieDescription/MovieDetails.styled.jsx","components/MovieDescription/MovieDescription.jsx","pages/MovieDatails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'fc655b0a98b1257d55ec04cdf6dbef33';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMoviesQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieContainer = styled.div``;\n\nexport const MovieDescriptionContainer = styled.div`\n  display: flex;\n`;\n\nexport const MovieImage = styled.img`\n  display: block;\n`;\n\nexport const MovieInfoContainer = styled.div`\n  padding: 30px;\n`;\nexport const MovieTitle = styled.h1`\n  font-size: 30px;\n  line-height: 1.2;\n  text-align: center;\n`;\n\nexport const MovieInfoWrap = styled.div`\n  display: flex;\n  gap: 20px;\n  align-items: baseline;\n`;\n\nexport const MovieInfoTitle = styled.h2`\n  font-size: 24px;\n  line-height: 1.2;\n  /* justify-content: center; */\n`;\n\nexport const MovieInfo = styled.div`\n  font-size: 20px;\n  line-height: 1.2;\n`;\n\nexport const GenersList = styled.ul`\n  list-style: none;\n`;\n\nexport const GenersListItem = styled.li`\n  font-size: 20px;\n  line-height: 1.2;\n`;\nexport const BackLink = styled(NavLink)`\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 1.2;\n  color: black;\n  display: block;\n  text-decoration: none;\n  margin: 15px 0 15px 0;\n  border-radius: 4px;\n  width: 150px;\n  padding: 10px 32px 10px 32px;\n  background-color: rgb(240, 218, 97);\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n`;\nexport const AdditonalTitle = styled.h2`\n  font-size: 24px;\n  line-height: 1.2;\n`;\n\nexport const AdditonalInfoList = styled.ul`\n  padding: 0;\n  list-style: none;\n`;\n\nexport const AdditonalInfoItem = styled.li`\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 1.2;\n`;\n","import PropTypes from 'prop-types';\n\nimport {\n  MovieDescriptionContainer,\n  MovieImage,\n  MovieInfoContainer,\n  MovieTitle,\n  MovieInfoWrap,\n  MovieInfoTitle,\n  MovieInfo,\n  GenersList,\n  GenersListItem,\n} from './MovieDetails.styled';\n\nexport default function MovieDescription({ movieDetails }) {\n  const { poster_path, original_title, vote_average, overview, genres } =\n    movieDetails;\n  const voteAveragePercent = Math.floor(Number(vote_average) * 10);\n\n  return (\n    <MovieDescriptionContainer>\n      <MovieImage\n        src={`https://image.tmdb.org/t/p/w400/${poster_path}`}\n        alt=\"\"\n      />\n      <MovieInfoContainer>\n        <MovieTitle>{original_title}</MovieTitle>\n\n        <MovieInfoWrap>\n          <MovieInfoTitle>User rate:</MovieInfoTitle>\n          <MovieInfo>{` ${voteAveragePercent}%`}</MovieInfo>\n        </MovieInfoWrap>\n\n        <MovieInfoTitle>Overview:</MovieInfoTitle>\n        <MovieInfo>{overview}</MovieInfo>\n\n        <MovieInfoWrap>\n          <MovieInfoTitle>Geners:</MovieInfoTitle>\n          <GenersList>\n            {genres.map(({ id, name }) => (\n              <GenersListItem key={id}>{name}</GenersListItem>\n            ))}\n          </GenersList>\n        </MovieInfoWrap>\n      </MovieInfoContainer>\n    </MovieDescriptionContainer>\n  );\n}\n\nMovieDescription.propTypes = {\n  movieDetails: PropTypes.object.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { useLocation, useParams, Outlet } from 'react-router-dom';\nimport { getMovieById } from 'components/MovieAPI/FetchMovie';\nimport MovieDescription from 'components/MovieDescription/MovieDescription';\nimport {\n  MovieContainer,\n  BackLink,\n  Link,\n  AdditonalTitle,\n  AdditonalInfoList,\n  AdditonalInfoItem,\n} from 'components/MovieDescription/MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n  const { movieId } = useParams();\n\n  const backLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    async function getFilmDetails() {\n      const film = await getMovieById(movieId);\n      setMovieDetails(film);\n    }\n    getFilmDetails();\n  }, [movieId]);\n\n  if (movieDetails === null) {\n    return;\n  }\n\n  return (\n    <MovieContainer>\n      <BackLink className=\"backLink\" to={backLink}>\n        Go Back\n      </BackLink>\n      <MovieDescription\n        movieDetails={movieDetails}\n        location={location}\n        movieId={movieId}\n      />\n      <AdditonalTitle>Additonal Information</AdditonalTitle>\n      <AdditonalInfoList>\n        <AdditonalInfoItem>\n          <Link to=\"cast\" state={{ from: backLink }}>\n            Cast\n          </Link>\n        </AdditonalInfoItem>\n        <AdditonalInfoItem>\n          <Link to=\"reviews\" state={{ from: Link }}>\n            Reviews\n          </Link>\n        </AdditonalInfoItem>\n      </AdditonalInfoList>\n      <Outlet />\n    </MovieContainer>\n  );\n}\n"],"names":["KEY","BASE_URL","getTrendingMovies","axios","response","data","getMoviesQuery","query","getMovieById","id","getMovieCast","cast","getMovieReviews","results","MovieContainer","styled","MovieDescriptionContainer","MovieImage","MovieInfoContainer","MovieTitle","MovieInfoWrap","MovieInfoTitle","MovieInfo","GenersList","GenersListItem","BackLink","NavLink","Link","AdditonalTitle","AdditonalInfoList","AdditonalInfoItem","MovieDescription","movieDetails","poster_path","original_title","vote_average","overview","genres","voteAveragePercent","Math","floor","Number","src","alt","map","name","MovieDetails","useState","setMovieDetails","location","useLocation","movieId","useParams","backLink","state","from","useEffect","film","getFilmDetails","className","to"],"sourceRoot":""}