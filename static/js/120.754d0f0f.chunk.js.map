{"version":3,"file":"static/js/120.754d0f0f.chunk.js","mappings":"kTAEMA,EAAM,mCACNC,EAAW,gCAEJC,EAAiB,mCAAG,oGACRC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,sCACoBD,EADpB,oBADQ,cACzBI,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,qDAOjBC,EAAc,mCAAG,WAAMC,GAAN,uFACLJ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,kBAC2BO,EAD3B,oBADK,cACtBH,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdG,EAAY,mCAAG,WAAMC,GAAN,uFACHN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDQ,EADC,oBACaT,EADb,oBADG,cACpBI,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZK,EAAY,mCAAG,WAAMD,GAAN,uFACHN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDQ,EADC,4BACqBT,EADrB,oBADG,cACpBI,EADoB,yBAInBA,EAASC,KAAKM,MAJK,2CAAH,sDAOZC,EAAe,mCAAG,WAAMH,GAAN,uFACNN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDQ,EADC,4BACqBT,EADrB,2BADM,cACvBI,EADuB,yBAItBA,EAASC,KAAKQ,SAJQ,2CAAH,qD,wKC/BfC,EAAWC,EAAAA,GAAAA,GAAH,4IASRC,EAAWD,EAAAA,GAAAA,GAAH,6CAIRE,EAAUF,EAAAA,GAAAA,IAAH,0DAIPG,EAAWH,EAAAA,GAAAA,EAAH,8HAORI,EAAgBJ,EAAAA,GAAAA,EAAH,8H,mBCdX,SAASK,IACtB,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,IARAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACqBhB,EAAAA,EAAAA,IAAac,GADlC,OACQb,EADR,OAEEY,EAAYZ,GAFd,4CADc,uBAAC,WAAD,wBAKdgB,EACD,GAAE,CAACH,IAECF,EAIL,OACE,8BACE,0BACE,SAACR,EAAD,UACGQ,GACCA,EAASM,KAAI,gBAAGnB,EAAH,EAAGA,GAAIoB,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACX,UAACf,EAAD,YACE,SAACC,EAAD,CACEe,IAAKH,EAAa,mCAAD,OAAoCA,EAApC,KAAqDI,EACtEC,IAAKJ,KAEP,SAACZ,EAAD,UAAWY,KACX,UAACX,EAAD,wBAA0BY,OANbtB,EADJ,SAcxB,C","sources":["components/MovieAPI/FetchMovie.js","components/Cast/Cast.styled.jsx","pages/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'fc655b0a98b1257d55ec04cdf6dbef33';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMoviesQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  list-style: none;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 30px;\n  padding: 0;\n`;\n\nexport const CastItem = styled.li`\n  max-width: 200px;\n`;\n\nexport const CastImg = styled.img`\n display: block;\n width: 200px;\n`;\nexport const CastName = styled.p`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  color: black;\n  text-align: center;\n`;\nexport const CastCharacter = styled.p`\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.2;\n  color: black;\n  text-align: center;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'components/MovieAPI/FetchMovie';\nimport {\n  CastList,\n  CastItem,\n  CastImg,\n  CastName,\n  CastCharacter,\n} from 'components/Cast/Cast.styled';\nimport nophoto from '../images/nophoto.png'\n\nexport default function MovieCast() {\n  const [filmCast, setFilmCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getCast() {\n      const cast = await getMovieCast(movieId);\n      setFilmCast(cast);\n    }\n    getCast();\n  }, [movieId]);\n\n  if (!filmCast) {\n    return;\n  }\n\n  return (\n    <section>\n      <div>\n        <CastList>\n          {filmCast &&\n            filmCast.map(({ id, profile_path, name, character }) => (\n              <CastItem key={id}>\n                <CastImg \n                  src={profile_path?`https://image.tmdb.org/t/p/w200/${profile_path} `: nophoto}\n                  alt={name}\n                />\n                <CastName>{name}</CastName>\n                <CastCharacter>Character:{character}</CastCharacter>\n              </CastItem>\n            ))}\n        </CastList>\n      </div>\n    </section>\n  );\n}\n"],"names":["KEY","BASE_URL","getTrendingMovies","axios","response","data","getMoviesQuery","query","getMovieById","id","getMovieCast","cast","getMovieReviews","results","CastList","styled","CastItem","CastImg","CastName","CastCharacter","MovieCast","useState","filmCast","setFilmCast","movieId","useParams","useEffect","getCast","map","profile_path","name","character","src","nophoto","alt"],"sourceRoot":""}